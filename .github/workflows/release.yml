name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm install semantic-release @semantic-release/changelog @semantic-release/github -D

      - name: Debug current context
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
          echo "GITHUB_EVENT_NAME: ${{ github.event_name }}"
          echo "CI: $CI"

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        run: npx semantic-release

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Import GPG key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.CI_GPG_PRIVATE_KEY }}

      - name: Trust imported GPG key
        run: |
          KEY_ID=$(gpg --list-secret-keys --with-colons | grep '^sec' | cut -d':' -f5)
          echo -e "5\ny\n" | gpg --command-fd 0 --expert --edit-key "$KEY_ID" trust

      - name: Create settings.xml
        run: |
          echo "MAVEN_USERNAME: $MAVEN_USERNAME"
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>central</id>
                <username>$MAVEN_USERNAME</username>
                <password>$MAVEN_PASSWORD</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>release</id>
                <properties>
                  <gpg.passphrase>$GPG_PASSPHRASE</gpg.passphrase>
                </properties>
              </profile>
            </profiles>
          </settings>
          EOF
        env:
          MAVEN_USERNAME: ${{ secrets.CI_MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CI_MAVEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.CI_GPG_PASSPHRASE }}

      - name: Deploy to Maven Central
        run: mvn clean deploy -P release --batch-mode --no-transfer-progress